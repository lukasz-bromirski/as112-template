# useful for initial debugging
log syslog all;

# set this to your router/instance IP
router id <your-router-IP-id>;

# filter that we'll use later on to advertise only
# AS112 prefixes - if you want to announce something on
# top of add, add it here or create other filters

filter ns_anycast4
prefix set allnet4;
{
   allnet4 = [
	192.175.48.1/32,
	192.175.48.6/32,
	192.175.48.42/32,
	192.31.196.1/32
   ];
   if ! (net ~ allnet4) then reject;
   accept;
}

filter ns_anycast6
prefix set allnet6;
{
   allnet6 = [
	2620:4f:8000::1/128,
	2620:4f:8000::6/128,
	2620:4f:8000::42/128,
	2001:4:112::1/128
   ];
   if ! (net ~ allnet6) then reject;
   accept;
}

protocol device {
}

# depending on your policies, you may use different
# protocols - in example below all AS112 prefixes are
# assigned to Loopback53 and therefore we're adding it
# here explicitly

protocol direct {
	ipv4;
	ipv6;
	interface "lo53";
}

protocol kernel kernel4 {
	learn;
	metric 0;
	ipv4 {
		import none;
		export all;
	};
}

protocol kernel kernel6 {
	learn;
	metric 0;
	ipv6 {
		import none;
		export all;
	};
}

# definition of IPv4 peer

protocol bgp PEER_V4 {
        description "PEER v4";

	# add peer IPv4 and ASN here:
        neighbor <peer-ipv4> as <peer-as>;

	# add your local IPv4 to be used as source of BGP connection
	local <your-ipv4> as 112;
	ipv4
	{
		import none;
		# export filter we created above
		export filter ns_anycast4;
	};
};

# definition of IPv6 peer

protocol bgp PEER_V6 {
	description "PEER v6";

	# add peer IPv6 and ASN here:
	neighbor <peer-ipv6> as <peer-as>;

	# add your local IPv6 to be used as source of BGP connection
	local <your-ipv6> as 112;
	ipv6
	{
		import none;
		# export filter we created above
		export filter ns_anycast6;
	};
};
