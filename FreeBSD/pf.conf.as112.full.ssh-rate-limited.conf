#
# example pf.conf for dedicated AS112 node with remote access
# note it allows BGP, DNS and SSH sessions
#
# SSH connections are always allowed from safe subnets
#
# SSH connections are allowed also from any location but if single source
# tries to connect more than 2 times in window of 180 seconds, it will
# be immediately blocked and visible in <bruteforce4> and <bruteforce6> tables
#
# v20240903
#

ext_if="em0"
lop_if="lo0"

# bgp peers

# put real IPv4/IPv6 below to allow forming of BGP connection (and advertise
# AS112 address space to your upstream)

bgpv4_peers =   "{ 169.254.1.1 }"
bgpv6_peers =   "{ 2001:db8::1:1 }"

# one way of hardening configuration is to limit incoming SSH connections to
# only trusted source networks; 

ssh_access4  =	"{ 169.254.96.0/24, 10.94.8.0/24 }"
ssh_access6	 =	"{ 2001:db8::/64 }"

# tables we'll use to filter traffic in/out

table <bgp-v4-t>        { $bgpv4_peers }
table <bgp-v6-t>        { $bgpv6_peers }
table <safe-ssh4-t>		{ $ssh_access4 }
table <safe-ssh6-t>		{ $ssh_access6 }

table <ssh-bruteforce4>	persist
table <ssh-bruteforce6>	persist

# global options, just an example safe for FreeBSD running with 4GB of RAM

set block-policy drop
set limit { states 55000, frags 8 }
set timeout { tcp.first 10 tcp.opening 15 tcp.finwait 5 tcp.closing 15 tcp.established 3600  }
set loginterface $ext_if
set syncookies adaptive (start 25%, end 12%)

# traffic scrub

scrub all

# DEFAULT BLOCK

block log all
block in quick from <ssh-bruteforce4> to any
block in quick from <ssh-bruteforce6> to any

# LOOPBACK0

pass in quick on $lop_if keep state
pass out quick on $lop_if keep state

# INCOMING: SSH

pass in quick on $ext_if inet proto tcp from { <safe-ssh4-t> } to any port 22 flags S/SA keep state
pass in quick on $ext_if inet6 proto tcp from { <safe-ssh6-t> } to any port 22 flags S/SA keep state

pass in quick on $ext_if inet proto tcp from any to any port 22 \
 flags S/SA keep state (max-src-conn 3, max-src-conn-rate 2/180, overload <ssh-bruteforce4> flush global)

pass in quick on $ext_if inet6 proto tcp from any to any port 22 \
 flags S/SA keep state (max-src-conn 3, max-src-conn-rate 2/180, overload <ssh-bruteforce6> flush global)

# INCOMING: BGP

pass in quick on $ext_if inet proto tcp from { <bgp-v4-t> } to any port 179 flags S/SA keep state
pass in quick on $ext_if inet6 proto tcp from { <bgp-v6-t> } to any port 179 flags S/SA keep state

# INCOMING: DNS

pass in quick on $ext_if inet proto { tcp, udp } from any to any port 53 keep state
pass in quick on $ext_if inet6 proto { tcp, udp } from any to any port 53 keep state

# INCOMING: ICMP/ICMPv6

pass in quick on $ext_if inet proto icmp all icmp-type { echoreq, unreach } keep state
pass in quick on $ext_if inet6 proto icmp6 all icmp6-type echoreq keep state

# OUTGOING: IPv4 and IPv6

pass out quick on $ext_if inet proto tcp from $ext_if to any flags S/SA keep state
pass out quick on $ext_if inet proto udp from $ext_if to any keep state
pass out quick on $ext_if inet proto icmp from $ext_if to any keep state

pass out quick on $ext_if inet6 proto tcp from $ext_if to any flags S/SA keep state
pass out quick on $ext_if inet6 proto udp from $ext_if to any keep state
pass out quick on $ext_if inet6 proto icmp6 from $ext_if to any keep state